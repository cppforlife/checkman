#!/usr/bin/env ruby
require "rubygems"
require "time"
require "json"
require "pivotal-tracker"

class TrackerStatus
  def initialize(project, user_name)
    @project, @user_name = project, user_name
  end

  def as_json(*)
    {
      :result => ok,
      :changing => changing,
      :url => nil,
      :info => nil
    }
  end

  def to_json(*)
    JSON.dump(as_json)
  end

  private

  def ok
    @project.ok?(@user_name)
  end

  def changing
    @project.changing?(@user_name)
  end

end

class Tracker
  def initialize(project_id, user_token, *user_name)
    @project_id, @user_token, @user_name = project_id, user_token, user_name.join(" ")
    authorize
  end

  def latest_status
    TrackerStatus.new(project, user_name)
  end

  private

  def authorize
    ::PivotalTracker::Client.token = @user_token
  end

  def project
    ::PivotalTracker::Project.find(@project_id)
  end

  def user_name
    @user_name
  end
end

::PivotalTracker::Project.class_eval do

  def ok?(user_name)
    @user_name = user_name

    !any_stories_rejected?
  end

  def changing?(user_name)
    @user_name = user_name

    !any_stories_started? && !any_stories_rejected?
  end

  private

  def all_their_stories
    stories.all(owned_by: @user_name)
  end

  def any_stories_started?
    all_their_stories.any? { |s| s.current_state == 'started' }
  end

  def any_stories_rejected?
    all_their_stories.any? { |s| s.current_state == 'rejected' }
  end

end

puts Tracker.new(*ARGV).latest_status.to_json if __FILE__ == $0
