#!/usr/bin/env ruby
require "rubygems"
require "time"
require "json"
require "pivotal-tracker"

class PivotalTrackerStatus
  def initialize(project)
    @project = project
  end

  def as_json
    {
      result: result,
      changing: changing,
      url: nil,
      info: nil
    }
  end

  private

  def result
    @project.status == :ok
  end

  def changing
    @project.status == :changing
  end

end

class PivotalTracker
  def initialize(project_id, user_token)
    @project_id, @user_token = project_id, user_token
  end

  def latest_status
    authorize
    PivotalTrackerStatus.new(project)
  end

  private

  def authorize
    ::PivotalTracker::Client.token = @user_token
  end

  def project
    ::PivotalTracker::Project.find(@project_id)
  end
end

::PivotalTracker::Project.class_eval do

  def status
    if changing?
      :changing
    elsif ok?
      :ok
    elsif failing?
      :failing
    end
  end

  def ok?
    any_stories_started? && !any_stories_rejected?
  end

  def changing?
    !any_stories_started? && !any_stories_rejected?
  end

  def failing?
    any_stories_rejected?
  end

  def any_stories_started?
    stories.all.any? { |s| s.current_state == 'started' }
  end

  def any_stories_rejected?
    stories.all.any? { |s| s.current_state == 'rejected' }
  end

end
